on: workflow_dispatch

name: Full Build

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    name: build-${{ matrix.os }}-${{ matrix.rust }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust:
          - stable
          - beta
          - nightly
          - 1.82.0  # MSRV
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.event.inputs.branch }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - uses: actions-rs/cargo@v1
        with:
          command: build

      - uses: actions-rs/cargo@v1
        with:
          command: test

      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  build-remote:
    runs-on: ${{ matrix.os }}
    name: build-remote-${{ matrix.os }}-${{ matrix.rust }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust:
          - stable
          - beta
          - nightly
          - 1.82.0  # MSRV
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.event.inputs.branch }}

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --features remote

      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features remote

  build-standalone:
    runs-on: ${{ matrix.os }}
    name: build-standalone-${{ matrix.os }}-${{ matrix.rust }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust:
          - stable
          - beta
          - nightly
          - 1.82.0  # MSRV
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.event.inputs.branch }}

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --features standalone

      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features standalone

      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: --features standalone --path .

  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build development version
        if: github.ref != 'refs/heads/master'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: httpmock/httpmock:build
